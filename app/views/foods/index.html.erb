<h2 style="text-align:center">Browse Menu</h2>

<!-- Tabs -->
<div class="menu-filter">
  <!-- Tabs -->
<div class="main-tabs">
  <button data-tab="food" class="tab-button active">Food</button>
  <button data-tab="drinks" class="tab-button">Drinks</button>
  <button data-tab="small-chops" class="tab-button">Small Chops</button>
</div>

  <div class="sub-tabs" id="foods-sub-tabs">
    <button data-subtab="carbohydrates" class="sub-tab-button active">Carbohydrates</button>
    <button data-subtab="protein" class="sub-tab-button">Protein</button>
    <button data-subtab="soup-stew" class="sub-tab-button">Soup/Stew</button>
  </div>
</div>

<div class="food-grid" id="food-grid">
  <% @foods.each do |food| %>
    <% sub = food.categories.find { |c| c.parent_id.present? } %>
    <% main = sub&.parent %>
    <% next unless sub && main %>

   <div class="food-card" data-main="<%= main.name.parameterize %>" data-sub="<%= sub.name.parameterize %>">

      <%= link_to food_path(food), style: "text-decoration: none; color: inherit;" do %>
        <%= image_tag food.image, class: "food-image" if food.image.attached? %>
        <h3><%= food.name %></h3>
        <p><%= food.description %></p>
        <p><strong>₦<%= number_to_currency(food.price, unit: "", precision: 0) %></strong></p>
      <% end %>

      <% if food.reviews.any? %>
        <p>
          <%= pluralize(food.reviews.count, "review") %> - ⭐ <%= number_with_precision(food.reviews.average(:rating), precision: 1) %>
        </p>

        <%= link_to "Read all reviews", food_path(food, anchor: "reviews"), class: "btn btn-sm btn-outline-secondary" %>
      <% else %>
        <p>No reviews yet</p>
      <% end %>

      <%= form_with url: cart_items_path, method: :post, local: true do |f| %>
        <%= hidden_field_tag :food_id, food.id %>
        <div class="quantity">
          <label>Qty:</label>
          <%= number_field_tag :quantity, 1, min: 1 %>
        </div>
        <%= f.submit "Add to Cart" %>
      <% end %>
    </div>
  <% end %>
</div>



<!-- Styles -->
<style>
  .tab-button, .sub-tab-button {
    padding: 8px 12px;
    margin: 5px;
    border: none;
    background: #ddd;
    cursor: pointer;
    border-radius: 4px;
  }

  .tab-button.active, .sub-tab-button.active {
    background: #28a745;
    color: white;
  }

  .food-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
  gap: 20px;
  margin-top: 20px;
}

.food-card {
  background: #fff;
  border: 1px solid #eee;
  border-radius: 8px;
  padding: 15px;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  height: 100%;
  box-sizing: border-box;
}

.food-image {
  width: 100%;
  height: 150px;
  object-fit: cover;
  margin-bottom: 10px;
}

.food-card h3 {
  margin: 0 0 5px;
}

.quantity {
  margin-top: 10px;
  margin-bottom: 10px;
}

.btn {
  margin-top: 5px;
}
</style>

<!-- JS Filter Logic -->
<script>
  document.addEventListener("DOMContentLoaded", () => {
    const mainTabs = document.querySelectorAll(".tab-button");
    const subTabs = document.querySelectorAll(".sub-tab-button");
    const foodCards = document.querySelectorAll(".food-card");
    const subTabSection = document.getElementById("foods-sub-tabs");

    function filterCards(mainCat, subCat = null) {
      foodCards.forEach(card => {
        const cardMain = card.dataset.main;
        const cardSub = card.dataset.sub;

        const show = mainCat === cardMain && (!subCat || subCat === cardSub);
        card.style.display = show ? "block" : "none";
      });
    }

    mainTabs.forEach(btn => {
      btn.addEventListener("click", () => {
        mainTabs.forEach(b => b.classList.remove("active"));
        btn.classList.add("active");

        const tab = btn.dataset.tab;
        if (tab === "food") {
          subTabSection.style.display = "block";
          const sub = document.querySelector(".sub-tab-button.active").dataset.subtab;
          filterCards("food", sub);
        } else {
          subTabSection.style.display = "none";
          filterCards(tab);
        }
      });
    });

    subTabs.forEach(btn => {
      btn.addEventListener("click", () => {
        subTabs.forEach(b => b.classList.remove("active"));
        btn.classList.add("active");

        const subcat = btn.dataset.subtab;
        filterCards("food", subcat);
      });
    });

    // Initial filter
    filterCards("food", "carbohydrates");
  });
</script>
